AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  portfolio-sam-app

  Sample SAM Template for portfolio-sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  WebsiteFootfallFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda_fn/
      Handler: app.lambda_handler
      Environment:
        Variables:
          TABLE_NAME:
            !Select [1, !Split ["/", !GetAtt WebsiteDynamoDBTable.Arn]]
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - Statement:
            - Sid: DynamoDBCrudPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: "*"
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /counter
            Method: get

  WebsiteDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: visits
          AttributeType: S
      KeySchema:
        - AttributeName: visits
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WebsiteFootfallApi:
    Description: API Gateway endpoint URL for Prod stage for Website Footfall function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/counter/"
  WebsiteFootfallFunction:
    Description: Lambda function to calculate website footfall
    Value: !GetAtt WebsiteFootfallFunction.Arn
  WebsiteFootfallFunctionRole:
    Description: Function execution role for lambda function to access dynamodb
    Value: !GetAtt WebsiteFootfallFunctionRole.Arn
  WebsiteDynamoDBTable:
    Description: Dynamo DB Table for keeping track of website count
    Value: !GetAtt WebsiteDynamoDBTable.Arn
